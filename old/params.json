{"name":"List-view","tagline":"An incremental rendering list view for Ember.js","body":"# Ember.ListView\r\n\r\nAn efficient incremental rendering list view for large lists.\r\n\r\nEmber.ListView works on mobile phones that support web overflow touch css,\r\ndoesn't work on iOS because iOS doesn't emit scroll events during the momentum\r\nphase of a scroll nor do the elements know there offset top during that scroll phase.\r\n\r\n## Dependecies\r\n\r\nYou will need to include [jquery](http://jquery.com/), [handlebars](http://handlebarsjs.com),\r\n[ember.js](http://emberjs.com) and list view extension. \r\n\r\n## Usage\r\n\r\nFirst, let's create a template:\r\n``` html\r\n<script type=\"text/x-handlebars\" data-template-name=\"index\">\r\n  {{#collection Ember.ListView contentBinding=\"controller\" height=500 rowHeight=50 width=500}}\r\n    {{name}}\r\n  {{/collection}}\r\n</script>\r\n```\r\n\r\nNext, let's feed our template with some data:\r\n``` javascript\r\n// create Ember application\r\nApp = Ember.Application.create();\r\n\r\n// create Ember.ArrayController\r\nApp.IndexController = Ember.ArrayController.extend({\r\n  content: []\r\n});\r\n\r\n// define default index route and pushing some data to content\r\nApp.IndexRoute = Ember.Route.extend({\r\n  setupController: function(controller) {\r\n    var content = [];\r\n    for (var i = 0; i < 10000; i++) {\r\n      content.push({name: \"Item \" + i});\r\n    }\r\n    controller.set('content', content);\r\n  }\r\n});\r\n```\r\n\r\nShazam! You should be able to see a scrollable area with 10,000 items in it.\r\n\r\n![](/screens/list.png)\r\n\r\n## Subclassing\r\n\r\nHere's an example of how to create your version of ```Ember.ListView```.\r\n\r\n``` html\r\n<script type=\"text/x-handlebars\" data-template-name=\"index\">\r\n  {{view App.ListView contentBinding=\"content\"}}\r\n</script>\r\n\r\n<script type=\"text/x-handlebars\" data-template-name=\"row_item\">\r\n  {{name}}\r\n</script>\r\n```\r\n\r\n``` javascript\r\n// create Ember application\r\nApp = Ember.Application.create();\r\n\r\n// define default index route and pushing some data to content\r\nApp.IndexRoute = Ember.Route.extend({\r\n  setupController: function(controller) {\r\n    var content = [];\r\n    for (var i = 0; i < 10000; i++) {\r\n      content.push({name: \"Item \" + i});\r\n    }\r\n    controller.set('content', content);\r\n  }\r\n});\r\n\r\n// extending Ember.ListView\r\n// customize the row views by subclassing Ember.ListItemView\r\n// and specifying the itemViewClass property in the Ember.ListView definition\r\nApp.ListView = Ember.ListView.extend({\r\n  height: 500,\r\n  rowHeight: 50,\r\n  itemViewClass: Ember.ListItemView.extend({templateName: \"row_item\"})\r\n});\r\n```\r\n\r\nUnfortunately, if you want to customize item template, you would have to use ```Ember.ListItemView```\r\nand create an additional template, as you see above. You cannot specify ```templateName``` paramter\r\ndirectly on ```Ember.ListView``` because it's derived from ```Ember.ContainerView``` and it cannot have a template.\r\n\r\n### Required parameters\r\n\r\nYou must specify the ```height``` and ```rowHeight``` parameters because ```Ember.ListView``` will try\r\nto fill visible area with rows. If you would like to have multiple columns, then you need to specify\r\n```elementWidth```, as well as ```width```.\r\n\r\n``` javascript\r\nApp.ListView = Ember.ListView.extend({\r\n  height: 500,\r\n  rowHeight: 50,\r\n  elementWidth: 80,\r\n  width: 500,\r\n  itemViewClass: Ember.ListItemView.extend({templateName: \"row_item\"})\r\n});\r\n```\r\n\r\n![](/screens/grid.png)\r\n\r\n### Required CSS\r\n\r\n``` css\r\n.ember-list-view {\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n.ember-list-item-view {\r\n  position: absolute;\r\n}\r\n```\r\n\r\n## List of contributors\r\n\r\n+ [Ray Cohen](https://github.com/raycohen)\r\n+ [Stefan Penner](https://github.com/stefanpenner)\r\n+ [Luke Melia](https://github.com/lukemelia)\r\n+ [Erik Bryn](https://github.com/ebryn)\r\n+ [Alex Navasardyan](https://github.com/2k00l)\r\n+ [Christopher Manning](https://github.com/christophermanning)\r\n+ [Sebastian Seilund](https://github.com/sebastianseilund)\r\n\r\nA lot of the work was sponsored by [Yapp Labs](https://www.yapp.us/).\r\n\r\n## How it works\r\n\r\n`Ember.ListView` will create enough rows to fill the visible area (as defined by the `height` property). It reacts to scroll events and reuses/repositions the rows as scrolled.\r\n\r\nPlease look at the [unit tests](https://github.com/emberjs/list-view/blob/master/packages/list-view/tests/list_view_test.js) for more information.\r\n\r\n## Running unit tests\r\n\r\nRun ```bundle exec rackup``` and open [http://localhost:9292](http://localhost:9292) in a browser.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}